// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract TokenMinter is ERC20, Ownable {
    // Constructor to initialize token name, symbol, and optional initial supply
    constructor(uint256 initialSupply) ERC20("MinterToken", "MNT") {
        _mint(msg.sender, initialSupply * (10 ** decimals())); // Mint initial supply to contract deployer
    }

    // Mint function restricted to the owner (deployer or admin)
    function mint(address to, uint256 amount) public onlyOwner {
        _mint(to, amount * (10 ** decimals()));
    }

    // Burn function to allow token holders to destroy their tokens
    function burn(uint256 amount) public {
        _burn(msg.sender, amount * (10 ** decimals()));
    }
}
